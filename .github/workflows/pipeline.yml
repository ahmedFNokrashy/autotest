name: Test Calculator

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  test:
    runs-on: ubuntu-latest  # Replace with desired runner OS (e.g., macOS, Windows)

    steps:
      - uses: actions/checkout@v2  # Check out the repository code

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.x  # Replace with your Python version (adjust if needed)

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt  # Replace with your dependency installation command (if any)

      - name: Run tests
        run: |
          python -m unittest test.py  # Replace with your test execution command (e.g., pytest)


  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() }}  # Always run the deployment job, even if tests fail
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: |
        # Your deployment script here
        # Example:
        # echo "Deployment started..."
        # ... your actual deployment commands ...
      - name: Notify on Deployment Success
        uses: actions/github-script@v5
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment successful! ðŸš€'
            })